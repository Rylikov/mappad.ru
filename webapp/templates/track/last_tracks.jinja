{% extends 'base.jinja' %}

{% block css %}
<link rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/leaflet.css" />
{% endblock %}

{% block content %}
<h2>{{ page_title }}</h2>
{% for track in tracks %}
<p>
    {% include 'track/_track_map.jinja' %}
</p>
{% endfor %}
{% endblock content %}

{% block scripts %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/leaflet.js"></script>
<script src="https://rawgithub.com/mpetazzoni/leaflet-gpx/master/gpx.js"></script>
<script type="application/javascript">
    if (document.readyState !== 'loading') {
        renredMaps();
    } else {
        document.addEventListener('DOMContentLoaded', renredMaps);
    }

    function renredMaps() {
        var maps = document.getElementsByClassName('gpx-map');
        [].forEach.call(maps, function (el) {
            display_gpx(el, el.getAttribute("data-gpx-source"));
        });
    }

    function display_gpx(elt, g) {

        if (!elt) return;

        var mapid = elt.getAttribute('data-map-target');
        if (!mapid) return;

        function _t(t) { return elt.getElementsByTagName(t)[0]; }
        function _c(c) { return elt.getElementsByClassName(c)[0]; }

        var map = L.map(mapid);
        L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="http://www.osm.org">OpenStreetMap</a>'
        }).addTo(map);


        new L.GPX(g, {
            async: true,
            marker_options: {
                startIconUrl: 'http://github.com/mpetazzoni/leaflet-gpx/raw/master/pin-icon-start.png',
                endIconUrl: 'http://github.com/mpetazzoni/leaflet-gpx/raw/master/pin-icon-end.png',
                shadowUrl: 'http://github.com/mpetazzoni/leaflet-gpx/raw/master/pin-shadow.png',
            },
        }).on('loaded', function (e) {
            var gpx = e.target;
            map.fitBounds(gpx.getBounds());

            _c('start').textContent = gpx.get_start_time().toDateString() + ', '
                + gpx.get_start_time().toLocaleTimeString();
            _c('distance').textContent = gpx.get_distance_imp().toFixed(2);
            _c('duration').textContent = gpx.get_duration_string(gpx.get_moving_time());
            _c('pace').textContent = gpx.get_duration_string(gpx.get_moving_pace_imp(), true);
            _c('avghr').textContent = gpx.get_average_hr();
            _c('elevation-gain').textContent = gpx.to_ft(gpx.get_elevation_gain()).toFixed(0);
            _c('elevation-loss').textContent = gpx.to_ft(gpx.get_elevation_loss()).toFixed(0);
            _c('elevation-net').textContent = gpx.to_ft(gpx.get_elevation_gain()
                - gpx.get_elevation_loss()).toFixed(0);
        }).addTo(map);
    }
    </script>
{% endblock %}
